When would you want to use a remote repository rather than keeping all your work
local?

    for collaboration or to back-up/secure work

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Avoids potential problems between new and developing code, could also cause cascading errors in code, especially for large projects.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    branches are divergent lines of development off the same root, clones are copies of a repository (usually local) that are attached to the original, a fork is a copy of a repository that is not directly attached to the original (for push and pull)

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Allows for development with as much compatibility as possible off-line and the local testing of merges before pushing changes.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    A small project with only one or a couple collaborators would be managable without VCS and could even be preferable for several reasons. Once a project has phases or many collaborators VCS is indespensable.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
